@model Mite.Models.AuthorServiceShowModel

@{ 
    ViewBag.Title = Model.Title;
}
@section styles{
    @Styles.Render("~/Content/lgallery")
    <style>
        #service-img{
            cursor: zoom-in;
        }
        .ui.list > .item > .vk.icon {
            color: #4d7198 !important;
        }
        .ui.items>.item>.ui.tiny.image{
            width: 80px !important;
            height: auto;
        }
    </style>
}
<div class="ui segment">
    <div class="ui stackable two column grid">
        <div class="column">
            <img src="@Model.ImageSrc" class="ui image" alt="@Model.Title" id="service-img" />
        </div>
        <div class="column">
            <h2 class="ui header">
                @Model.Title
                <span class="sub header">@Model.ServiceType.Name</span>
            </h2>
            <form class="ui form" id="dealForm">
                @Html.HiddenFor(x => x.Id)
                <div class="field">
                    <button type="button" class="ui animated fade fluid primary button" onclick="DealsApi.create()">
                        <div class="hidden content"><i class="shop icon"></i></div>
                        <div class="visible content">Сделать заказ</div>
                    </button>
                </div>
                @if (User.IsInRole(RoleNames.Moderator))
                {
                    <div class="field">
                        <label>Пересчитать:</label>
                        <div class="ui blue buttons">
                            <button type="button" class="ui button" onclick="RatingMvc.recount('@Model.Id', '@RatingRecountTypes.AuthorService', this)">
                                Рейтинг
                            </button>
                            <button type="button" class="ui button" onclick="DealsMvc.recountReliability('@Model.Id', '@ReliabilityRecountTypes.AuthorService', this)">
                                Надёжность
                            </button>
                        </div>
                    </div>
                }
                <div class="ui error message"></div>
            </form>
            <h3 class="ui dividing header">Описание</h3>
            <p>@Model.Description</p>
            <h3 class="ui dividing header">Информация</h3>
            <div class="ui relaxed large list" role="list">
                <a class="item" href="#" role="listitem">
                    <i class="blue calendar large icon"></i>
                    <div class="content">
                        <div class="header">Выполнит примерно за <b>@Model.Deadline</b></div>
                    </div>
                </a>
                <a class="item" role="listitem">
                    <i class="yellow star large icon"></i>
                    <div class="content">
                        <div class="header">Рейтинг: @Model.Rating</div>
                    </div>
                </a>
                @if (Model.Price != null)
                {
                    <a class="item" href="#" role="listitem">
                        <i class="green ruble large icon"></i>
                        <div class="content">
                            <div class="header">Цена: <b>@Model.Price</b></div>
                        </div>
                    </a>
                }
            </div>
            @if (!string.IsNullOrEmpty(Model.VkRepostCode))
            {
                <h3 class="ui dividing header">Дополнительные условия оплаты</h3>
                <div class="ui relaxed large list" role="list">
                    <a class="item" role="listitem">
                        <i class="vk icon"></i>
                        <div class="content">
                            <div class="header">Репост записи ВКонтакте</div>
                        </div>
                    </a>
                </div>
            }
            <h3 class="ui dividing header">Автор</h3>
            <div class="ui items">
                <div class="item">
                    <a class="ui tiny circular image" href="@Url.Action("Index", "UserProfile", new { name = Model.Author.UserName })">
                        <img src="@Model.Author.AvatarSrc" />
                    </a>
                    <div class="content">
                        @Html.ActionLink(Model.Author.UserName, "Index", "UserProfile", new { name = Model.Author.UserName }, new { @class = "header" })
                        <p class="description" style="margin-top: 0">@Model.Author.Description</p>
                    </div>
                </div>
            </div>
            <h3 class="ui dividing header">Отзывы</h3>
            @if (Model.Feedbacks.Count > 0)
            {
                <div class="ui divided items">
                    @foreach (var feedback in Model.Feedbacks)
                    {
                        <div class="item">
                            <a class="ui tiny circular image" href="@Url.Action("Index", "UserProfile", new { name = feedback.User.UserName })">
                                <img src="@Model.Author.AvatarSrc" />
                            </a>
                            <div class="content">
                                @Html.ActionLink(feedback.User.UserName, "Index", "UserProfile", new { name = feedback.User.UserName }, new { @class = "header" })
                                <div class="description">@feedback.Content</div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p>К услуге пока нет отзывов.</p>
            }
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/api", "~/bundles/gallery")
    <script>
        $(function () {
            AuthorServiceApi.loadGallery('@Model.Id', $('#service-img'));
        });
    </script>
}