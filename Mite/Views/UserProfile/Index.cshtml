@using Mite.CodeData.Enums
@using Mite.Helpers
@model Mite.Models.ProfileModel

@{
    ViewBag.Title = "Профиль " + Model.UserName;
    ViewBag.MetaDescription = string.IsNullOrEmpty(Model.About) ? $"Страница пользователя {Model.UserName}" : Model.About;

    var openGraphMeta = new Dictionary<string, string>
    {
        { "og:title", ViewBag.Title },
        { "og:type", "profile" },
        { "og:image", $"http://{Request.Url.Host}/{Model.AvatarSrc}" },
        { "og:url", Url.Action("Index", "UserProfile", new{name = Model.UserName}, "http") }
    };

    var pageUserName = Model.UserName.ToLower();
    var currentUserName = User.Identity.Name.ToLower();
    var isMobileDevice = ViewHelper.IsMobileDevice(Request);
}
@section meta{
    @ViewHelper.GenerateMeta(openGraphMeta)
}
<div class="ui profile center aligned three column stackable grid segment">
    <div class="computer tablet only row">
        <div class="right aligned column">
            @if (Model.YandexWalId != null)
            {
                <button class="ui primary icon button" onclick="$('#donateModal').modal('show')">
                    <i class="heart icon"></i>
                    Поддержать
                </button>
            }
        </div>
        <div class="column">
            <div class="ui centered circular image" id="avatar-img">
                <div class="ui dimmer">
                    <div class="content">
                        <div class="center">
                            <a class="ui huge black circular avatar icon button" href="@Url.Action("ChangeAvatar", "UserSettings")"><i class="photo icon"></i></a>
                        </div>
                    </div>
                </div>
                <img src="@Model.AvatarSrc" width="150" />
            </div>
            <h2 class="ui header">
                @Model.UserName
                <span class="sub header">
                    @Model.About
                </span>
            </h2>
            @SocialServicesHelper.RenderSocialLinksForProfile(Model.SocialLinks)
        </div>
        <div class="left aligned column">
            @if (currentUserName != pageUserName && !Model.IsFollowing && User.Identity.IsAuthenticated)
            {
                <button class="ui green button" onclick="addFollower('@Model.UserId', this)">
                    <i class="add user icon"></i>Подписаться
                </button>
                <button class="ui red button" onclick="deleteFollower('@Model.UserId', this)" style="display: none">
                    <i class="remove user icon"></i>Отписаться
                </button>
            }
            else if (Model.IsFollowing && User.Identity.IsAuthenticated)
            {
                <button class="ui red button" onclick="deleteFollower('@Model.UserId', this)">
                    <i class="remove user icon"></i>Отписаться
                </button>
                <button class="ui green button" onclick="addFollower('@Model.UserId', this)" style="display: none">
                    <i class="add user icon"></i>Подписаться
                </button>
            }
            @if (currentUserName == pageUserName)
            {
                <a href="/user/settings" class="ui blue button"><i class="setting icon"></i>Настройки</a>
            }
        </div>
    </div>
    <div class="stackable mobile only row">
        <div class="column">
            <img class="ui centered circular image" src="@Model.AvatarSrc" width="150" />
            <h2 class="ui header">
                @Model.UserName
                <span class="sub header">
                    @Model.About
                </span>
            </h2>
        </div>
        <div class="column">
            @if (Model.YandexWalId != null)
            {
                <button class="ui green labeled icon button" onclick="$('#donateModal').modal('show')">
                    <i class="heart icon"></i>
                    Поддержать
                </button>
            }
        </div>
        <div class="column">
            @if (currentUserName != pageUserName && !Model.IsFollowing && User.Identity.IsAuthenticated)
            {
                <button class="ui primary button" onclick="addFollower('@Model.UserId', this)">
                    <i class="add user icon"></i>Подписаться
                </button>
                <button class="ui red button" onclick="deleteFollower('@Model.UserId', this)" style="display: none">
                    <i class="remove user icon"></i>Отписаться
                </button>
            }
            @if (Model.IsFollowing)
            {
                <button class="ui red button" onclick="deleteFollower('@Model.UserId', this)">
                    <i class="remove user icon"></i>Отписаться
                </button>
                <button class="ui primary button" onclick="addFollower('@Model.UserId', this)" style="display: none">
                    <i class="add user icon"></i>Подписаться
                </button>
            }
        </div>
    </div>
    <div class="row">
        <div class="column">
            <div class="ui small statistic">
                <div class="value">
                    @Model.FollowersCount
                </div>
                <div class="label">
                    @ViewHelper.GetWordCase(Model.FollowersCount, "Подписчик", "Подписчика", "Подписчиков")
                </div>
            </div>
        </div>
        <div class="column">
            <div class="ui small statistic">
                <div class="value">
                    @Model.Rating
                </div>
                <div class="label">
                    Рейтинг
                </div>
            </div>
        </div>
        <div class="column">
            <div class="ui small statistic">
                <div class="value">
                    @Model.PostsCount
                </div>
                <div class="label">
                    @ViewHelper.GetWordCase(Model.PostsCount, "Работа", "Работы", "Работ")
                </div>
            </div>
        </div>
    </div>
</div>
<div class="ui tabs stackable menu" id="tabs-context">
    @if (currentUserName == pageUserName)
    {
        <a class="active item" data-tab="posts">Работы</a>
    }
    else
    {
        <a class="active item" data-tab="posts/published">Работы</a>
    }
    <a class="item" id="followers-tab" data-tab="followers">Подписчики</a>
    @if (currentUserName == pageUserName)
    {
        <a class="item" data-tab="followings">Я подписан</a>
    }
    <a class="item" data-tab="services">Услуги</a>
    <div class="right item">
        <i class="filter icon"></i>
        Сначала&nbsp;
        <div class="ui inline dropdown" id="sortDropDown">
            <div class="text">новые</div>
            <i class="dropdown icon"></i>
            <div class="menu">
                <div class="active item" data-text="новые" data-value="@((byte)SortFilter.New)">Новые</div>
                <div class="item" data-text="высший рейтинг" data-value="@((byte)SortFilter.Popular)">Высший рейтинг</div>
                <div class="item" data-text="старые" data-value="@((byte)SortFilter.Old)">Старые</div>
            </div>
        </div>
    </div>
</div>
@if (currentUserName == pageUserName)
{
    <div class="ui tab" data-tab="posts">
        <div class="ui stackable center aligned labeled icon secondary tabs menu">
            <a class="active item" data-tab="published">
                <i class="announcement icon"></i>
                Публикации
            </a>
            <a class="item" data-tab="drafts">
                <i class="edit icon"></i>
                Черновики
            </a>
            <a class="item" data-tab="blocked">
                <i class="lock icon"></i>
                Блокированные
            </a>
        </div>
        @if (isMobileDevice)
        {
            <div class="ui tab stackable two column grid basic segment" data-tab="published"></div>
            <div class="ui tab stackable two column basic segment grid" data-tab="drafts"></div>
            <div class="ui tab stackable two column basic segment grid" data-tab="blocked"></div>
        }
        else
        {
            <div class="ui tab four column grid basic segment" data-tab="published"></div>
            <div class="ui tab four column basic segment grid" data-tab="drafts"></div>
            <div class="ui tab four column basic segment grid" data-tab="blocked"></div>
        }
    </div>
    if (isMobileDevice)
    {
        <div class="ui tab doubling three column basic segment grid" data-tab="followers"></div>
        <div class="ui tab doubling three column basic segment grid" data-tab="followings"></div>
        <div class="ui tab stackable two column basic segment grid" data-tab="services"></div>
    }
    else
    {
        <div class="ui tab four column basic segment grid" data-tab="followers"></div>
        <div class="ui tab four column basic segment grid" data-tab="followings"></div>
        <div class="ui tab three column basic segment grid" data-tab="services"></div>
    }
    <div class="dot-loader-wrapper">
        <div class="dot-loader">
            <div class="dot"></div>
            <div class="dot"></div>
            <div class="dot"></div>
        </div>
    </div>
}
else
{
    if (Model.ShowAd)
    {
        <div class="ui stackable grid">
            <div class="three wide column">
                <div class="ui segment">
                    <h4 class="ui dividing header">Реклама</h4>
                    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                    <!-- TopAd -->
                    <ins class="adsbygoogle"
                         style="display:block"
                         data-ad-client="ca-pub-7675079294669395"
                         data-ad-slot="2018290469"
                         data-ad-format="auto"></ins>
                    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
                </div>
            </div>
            <div class="thirteen wide column">
                @if (isMobileDevice)
                {
                    <div class="ui tab two column stackable basic segment grid" data-tab="posts/published"></div>
                    <div class="ui doubling tab three column basic segment grid" data-tab="followers"></div>
                    <div class="ui tab stackable two column basic segment grid" data-tab="services"></div>
                }
                else
                {
                    <div class="ui tab three column basic segment grid" data-tab="posts/published"></div>
                    <div class="ui tab four column basic segment grid" data-tab="followers"></div>
                    <div class="ui tab three column basic segment grid" data-tab="services"></div>
                }
                <div class="dot-loader-wrapper">
                    <div class="dot-loader">
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        if (isMobileDevice)
        {
            <div class="ui tab stackable two column basic segment grid" data-tab="posts/published"></div>
            <div class="ui doubling tab three column basic segment grid" data-tab="followers"></div>
            <div class="ui tab stackable two column basic segment grid" data-tab="services"></div>
        }
        else
        {
            <div class="ui tab three column basic segment grid" data-tab="posts/published"></div>
            <div class="ui tab four column basic segment grid" data-tab="followers"></div>
            <div class="ui tab three column basic segment grid" data-tab="services"></div>
        }
        <div class="dot-loader-wrapper">
            <div class="dot-loader">
                <div class="dot"></div>
                <div class="dot"></div>
                <div class="dot"></div>
            </div>
        </div>
    }
}
<div class="ui basic modal" id="confirmPostDelete">
    <div class="ui icon header">
        <i class="remove circle icon"></i>
        Удалить работу
    </div>
    <div class="content" style="text-align: center">
        <p>Вы уверены? Данное действие будет невозможно отменить</p>
    </div>
    <div class="actions">
        <div class="ui red basic cancel inverted button">
            <i class="remove icon"></i>
            Нет
        </div>
        <div class="ui green ok inverted button">
            <i class="checkmark icon"></i>
            Да
        </div>
    </div>
</div>
<div class="ui small modal" id="donateModal">
    <i class="close icon"></i>
    <div class="header">
        Поддержать @Model.UserName
    </div>
    <div class="content">
        <form class="ui form" id="donateForm" action="https://money.yandex.ru/quickpay/confirm.xml" method="post" target="_blank">
            <div class="field">
                <textarea placeholder="Ваши пожелания =)" name="comment" rows="3"></textarea>
            </div>
            <div class="inline fields">
                <div class="field">
                    <input type="number" placeholder="Сумма" name="sum" />
                </div>
                <div class="field">
                    <div class="ui radio checkbox">
                        <input type="radio" name="paymentType" value="PC" class="hidden" />
                        <label>Яндекс.Деньги</label>
                    </div>
                </div>
                <div class="field">
                    <div class="ui radio checkbox">
                        <input type="radio" name="paymentType" value="PC" class="hidden" />
                        <label>Банковская карта</label>
                    </div>
                </div>
                <div class="field">
                    <div class="ui radio checkbox">
                        <input type="radio" name="paymentType" value="MC" class="hidden" />
                        <label>Мобильный</label>
                    </div>
                </div>
            </div>
            <input type="hidden" name="receiver" value="@Model.YandexWalId" />
            <input type="hidden" name="quickpay-form" value="donate" />
            <input type="hidden" name="targets" value="Поддержка пользователя @Model.UserName" />
            <input type="hidden" name="formcomment" value="Поддержка пользователя @Model.UserName" />
            <input type="hidden" name="short-dest" value="Поддержка пользователя @Model.UserName" />
            <input type="hidden" name="successURL" value="@Request.Url" />
        </form>
    </div>
    <div class="actions">
        <button type="submit" form="donateForm" class="ui primary button">Поддержать</button>
    </div>
</div>
<script id="followersTmpl" type="text/x-jsrender">
    <div class="column">
        <div class="ui compact segment follower-card grid" style="margin: 0px;">
            <div class="five wide column">
                <img src="{{:AvatarSrc}}" class="ui small circular image">
            </div>
            <div class="eleven wide column">
                <h4 class="ui header">
                    <span class="content">
                        <a href="/user/profile/{{:UserName}}">{{:UserName}}</a> &bull; <i class="yellow star icon"></i>{{:Rating}}
                        <span class="sub header">{{:Description}}</span>
                    </span>
                </h4>
            </div>
        </div>
    </div>
</script>
<script id="postsTmpl" type="text/x-jsrender">
    <div class="column" data-post-id="{{:Id}}">
        <div class="ui segment {{if !IsImage && Cover != null}}invert{{/if}}{{if !ShowAdultContent}} hide-adult-content{{/if}} post-item" 
        {{if !IsImage && Cover != null}} style="background: linear-gradient(rgba(181, 64, 198, 0.6),rgba(181, 64, 198, 0.5)), url({{:Cover}})"{{/if}} 
        id="post{{:Id}}">
            @if (currentUserName == pageUserName)
            {
                <div class="extra content">
                    {{if IsPublished}}
                    <div class="ui default floating compact dropdown button">
                        Действия
                        <i class="dropdown icon"></i>
                        <div class="menu" role="menu">
                            {{if CanEdit}}
                            <a class="item" href="@Url.Action("EditPost", "Posts")/{{:Id}}" role="menuitem"><i class="edit icon"></i>Редактировать</a>
                            {{/if}}
                            <div class="item" onclick="showDeletePostModal('{{:Id}}')" role="menuitem"><i class="remove icon"></i>Удалить</div>
                        </div>
                    </div>
                    {{else}}
                    <div class="ui primary buttons">
                        <a class="ui compact button" href="@Url.Action("EditPost", "Posts")/{{:Id}}">Редактировать</a>
                        <div class="ui compact floating dropdown icon button">
                            <i class="dropdown icon"></i>
                            <div class="menu" role="menu">
                                <div class="item" onclick="publishPost('{{:Id}}')" role="menuitem"><i class="announcement icon"></i>Опубликовать</div>
                                <div class="item" onclick="showDeletePostModal('{{:Id}}')" role="menuitem"><i class="remove icon"></i>Удалить</div>
                            </div>
                        </div>
                    </div>
                    {{/if}}
                </div>
                <div class="ui {{if !IsImage && Cover != null}}inverted {{/if}} divider"></div>
            }
            {{if IsImage}}
            <div class="img-content">
                {{if IsPublished}}
                <a href="@Url.Action("ShowPost", "Posts")/{{:Id}}">
                    <img src="{{:Content}}" class="ui image" />
                </a>
                {{else}}
                <a href="@Url.Action("EditPost", "Posts")/{{:Id}}">
                    <img src="{{:Content}}" class="ui image" />
                </a>
                {{/if}}
                {{if IsGif}}
                <div class="active gif-wrapper">
                    <button class="ui large primary circular icon button" onclick="loadFullGif('{{:FullPath}}', '{{:Id}}', $(this))"><i class="fire icon"></i></button>
                    <span class="ui violet label">gif</span>
                </div>
                {{/if}}
            </div>
            {{else}}
            {{if IsPublished}}
            <a class="post-content content" href="@Url.Action("ShowPost", "Posts")/{{:Id}}">
                {{:Content}}
            </a>
            {{else}}
            <a class="post-content content" href="@Url.Action("EditPost", "Posts")/{{:Id}}">
                {{:Content}}
            </a>
            {{/if}}
            {{/if}}
            <div class="ui {{if !IsImage && Cover != null}}inverted{{/if}} divider"></div>
            <div class="extra content">
                <a class="ui {{if !IsImage && Cover != null}}inverted {{/if}}header" style="margin-bottom: 5px" href="/posts/showpost/{{:Id}}">
                    {{:Header}}
                    <span class="sub header">
                        {{:Description}}
                    </span>
                </a>
                {{for Tags}}
                <a class="ui{{if !~root.IsImage && ~root.Cover != null}} invert{{/if}} label" href="/posts/top?tags={{>#data}}">{{>#data}}</a>
                {{/for}}
            </div>
            <div class="ui {{if !IsImage && Cover != null}}inverted{{/if}} divider"></div>
            <div class="extra content">
                {{:PublicTimeStr}}
                {{if IsPublished}}
                <div class="right">
                    <i class="yellow star icon"></i>{{:Rating}}
                    <i class="{{if Cover == null}}blue{{else}}black{{/if}} unhide icon"></i>{{:Views}}
                    <i class="green comments outline icon"></i>{{:CommentsCount}}
                </div>
                {{/if}}
            </div>
            {{if !ShowAdultContent}}
            <div class="ui dimmer">
                <div class="content">
                    <div class="center">
                        <h2 class="ui inverted header">Взрослый контент(18+)</h2>
                        <button class="ui primary button" onclick="$(this).parents('.post-item').dimmer('hide')">Показать</button>
                    </div>
                </div>
            </div>
            {{/if}}
        </div>
    </div>
</script>
<script id="servicesTmpl" type="text/x-jsrender">
    <div class="column">
        <div class="ui service-item segment">
            <div class="extra content">
                <a href="@Url.Action("Top", "AuthorServices")?serviceType={{:ServiceType.Id}}" class="ui right floated teal tag label">{{:ServiceType.Name}}</a>
                @if (currentUserName == pageUserName)
                {
                    <a class="ui primary compact button" href="@Url.Action("Edit", "AuthorServices")/{{:Id}}">Редактировать</a>
                }
                else
                {
                    <a class="ui primary compact button" href="@Url.Action("Show", "AuthorServices")/{{:Id}}">Смотреть</a>
                }
            </div>
            <div class="ui divider"></div>
            <div class="img-content">
                <a href="@Url.Action("Show", "AuthorServices")/{{:Id}}">
                    <img src="{{:ImageSrc}}" class="ui image" />
                </a>
            </div>
            <div class="ui divider"></div>
            <div class="extra content">
                <a class="ui header" href="@Url.Action("Show", "AuthorServices")/{{:Id}}">
                    {{:Title}}
                    <span class="sub header">{{:Description}}</span>
                </a>
            </div>
            <div class="ui divider"></div>
            <div class="extra content">
                <i class="calendar violet icon"></i>
                <span>Срок: {{:Deadline}}</span>
                {{if Price != null && Price > 0}}
                <div class="right">
                    <i class="ruble green icon"></i>
                    <span>Цена: {{:Price}}</span>
                </div>
                {{/if}}
            </div>
        </div>
    </div>
</script>
<template id="emptyPostTmpl">
    <div class="sixteen wide column">
        <h2 class="ui center aligned icon header" style="color: #6D6788; margin-top: 20px;">
            <i class="frown icon"></i>
            @if (currentUserName != pageUserName)
            {
                <span class="content">
                    У пользователя пока нет работ.
                </span>
            }
            else
            {
                <span class="content">
                    У вас пока нет работ.
                </span>
            }
        </h2>
    </div>
</template>
<template id="emptyBlockedTmpl">
    <div class="sixteen wide column">
        <h2 class="ui center aligned icon header" style="color: #6D6788">
            <i class="smile icon"></i>
            <span class="content">У вас нет заблокированных работ.</span>
        </h2>
    </div>
</template>
<template id="emptyFollowersTmpl">
    <div class="sixteen wide column">
        <h3 class="ui center aligned icon header" style="color: #6D6788">
            <i class="users icon"></i>
            @if (currentUserName == pageUserName)
            {
                <span class="content">
                    У вас пока нет подписчиков.
                </span>
            }
            else
            {
                <span class="content">
                    У пользователя пока нет подписчиков.
                </span>
            }
        </h3>
    </div>
</template>
<template id="emptyFollowingsTmpl">
    <div class="sixteen wide column">
        <h3 class="ui center aligned icon header" style="color: #6D6788">
            <i class="users icon"></i>
            <span class="content">
                Вы пока ни на кого не подписались.
            </span>
        </h3>
    </div>
</template>
<template id="emptyServicesTmpl">
    <div class="sixteen wide column">
        <h3 class="ui center aligned icon header" style="color: #6D6788">
            <i class="suitcase icon"></i>
            <span class="content">
                @if(pageUserName == currentUserName)
                {
                    @Html.Raw("У вас пока нет услуг.")
                }
                else
                {
                    @Html.Raw("У пользователя пока нет услуг.")
                }
            </span>
        </h3>
    </div>
</template>
@Scripts.Render("~/bundles/jsrender", "~/bundles/grid")
<script>
    var delPostId;
    var isOwner = @((currentUserName == pageUserName).ToString().ToLower());
    function getCurrentTab(){
        var tab = window.location.hash.replace('#/', '').replace('#', '');
        if(tab == ''){
            return $('.ui.tabs .item.active').data('tab');
        }
        return tab;
    }
    function publishPost(postId){
        $.ajax({
            url: '@Url.Action("PublishPost", "Posts")' + '/' + postId,
            type: 'post',
            success: function (){
                window.location.reload();
            },
            error: function(){
                alert('Ошибка при попытке публикации');
            }
        });
    }
    function sendNotification(notificType, targetUserId){
        $.ajax({
            url: '/api/notification',
            type: 'post',
            data: {
                NotificationType: notificType,
                User: {
                    Id: targetUserId
                }
            },
            success: function(){
                window.hubReady.done(function(){
                    $.connection.notifyHub.server.newNotification(targetUserId, notificType, null);
                });
            }
        });
    }
    function addFollower(followingUserId, btn) {
        var $btn = $(btn);
        $btn.addClass('loading disabled');

        $.ajax({
            url: '/api/followers',
            type: 'post',
            data: '=' + followingUserId,
            success: function (resp) {
                $btn.hide();
                $btn.siblings().show();
                sendNotification('@NotificationTypes.Follower', '@Model.UserId');
            },
            error: function (jqXhr) {
                alert('Ошибка сервера');
            },
            complete: function(){
                $btn.removeClass('loading disabled');
            }
        });

    }
    function deleteFollower(followingUserId, btn) {
        var $btn = $(btn);
        $btn.addClass('loading disabled');

        $.ajax({
            url: '/api/followers',
            type: 'delete',
            data: '=' + followingUserId,
            success: function (resp) {
                $btn.hide();
                $btn.siblings().show();
            },
            error: function (jqXhr) {
                iziToast.error({
                    title: 'Упс!',
                    message: 'Ошибка сервера.'
                });
            },
            complete: function(){
                $btn.removeClass('loading disabled');
            }
        });
    }
    function showDeletePostModal(postId){
        delPostId = postId;
        $('#confirmPostDelete').modal('show');
    }
    function loadFullGif(newPath, postId, $button) {
        $button.addClass('loading');

        var postSelector = '#post' + postId;
        var $img = $(postSelector + ' .img-content .image');
        $img.attr('src', newPath);
        $img.on('load', function () {
            $(postSelector + ' .gif-wrapper').removeClass('active');
            $button.removeClass('loading');
        });
    }
    $(function () {
        $('#donateForm').form({
            on: 'submit',
            fields: {
                sum: {
                    rules: [
                        {
                            type: 'integer',
                            prompt: 'В качестве суммы укажите целое число'
                        }
                    ]
                },
                paymentType: {
                    rules: [
                        {
                            type: 'empty',
                            prompt: 'Выберите тип оплаты'
                        }
                    ]
                }
            }
        });
        $('#userActionsDrop').dropdown({
            action: 'nothing',
            transition: 'slide right',
            duration: 300
        });
        var currentUser = '@currentUserName'
        var pageUser = '@pageUserName';
        if (currentUser === pageUser) {
            $('#avatar-img').dimmer({
                opacity: 0.3,
                on: 'hover'
            });
        }

        var grids = [
            {
                tabName: 'posts/published',
                elem: $('.tab[data-tab="posts/published"]').masonry()
            },
            {
                tabName: 'published',
                elem: $('.tab[data-tab="published"]').masonry()
            },
            {
                tabName: 'drafts',
                elem: $('.tab[data-tab="drafts"]').masonry()
            },
            {
                tabName: 'blocked',
                elem: $('.tab[data-tab="blocked"]').masonry()
            },
            {
                tabName: 'followers',
                elem: $('.tab[data-tab="followers"]').masonry()
            },
            {
                tabName: 'followings',
                elem: $('.tab[data-tab="followings"]').masonry()
            },
            {
                tabName: 'services',
                elem: $('.tab[data-tab="services"]').masonry()
            }
        ];
        if(isOwner){
            ViewHelper.activateSidebarItem('.user-profile.item');
        }
        var deletePostModal = $('#confirmPostDelete').modal({
            onApprove: function() {
                var postId = delPostId;
                var deleteElem = $('.column[data-post-id="' + postId + '"]')[0];
                $.ajax({
                    url: '/posts/deletepost/' + postId,
                    type: 'post',
                    success: function (data) {
                        var tab = TabFilter.Tabs.getLastActiveTab();
                        $('.tab[data-tab="' + tab.name + '"]').masonry('remove', deleteElem).masonry('layout');
                    },
                    error: function (jqXhr) {
                    }
                });
            }
        });
        if(isOwner){
            var postsTab = new Tab({
                parentTab: null,
                name: 'posts',
                isActive: true,
            });
            var publishedTab = new Tab({
                parentTab: postsTab,
                name: 'published',
                isActive: true,
                tmplSelector: '#postsTmpl',
                emptyTmplSelector: '#emptyPostTmpl'
            });
            var blockedTab = new Tab({
                parentTab: postsTab,
                name: 'blocked',
                isActive: false,
                tmplSelector: '#postsTmpl',
                emptyTmplSelector: '#emptyBlockedTmpl'
            });
            var draftsTab = new Tab({
                parentTab: postsTab,
                name: 'drafts',
                isActive: false,
                tmplSelector: '#postsTmpl',
                emptyTmplSelector: '#emptyPostTmpl'
            });
            var followingsTab = new Tab({
                parentTab: null,
                name: 'followings',
                isActive: false,
                tmplSelector: '#followersTmpl',
                emptyTmplSelector: '#emptyFollowingsTmpl'
            });
            TabFilter.Tabs.items = [postsTab, publishedTab, draftsTab, blockedTab, followingsTab];
        } else{
            var postsTab = new Tab({
                parentTab: null,
                name: 'posts/published',
                tmplSelector: '#postsTmpl',
                emptyTmplSelector: '#emptyPostTmpl',
                isActive: true
            });
            TabFilter.Tabs.items = [postsTab];
        }
        var followersTab = new Tab({
            parentTab: null,
            name: 'followers',
            isActive: false,
            tmplSelector: '#followersTmpl',
            emptyTmplSelector: '#emptyFollowersTmpl'
        });
        var servicesTab = new Tab({
            parentTab: null,
            name: 'services',
            isActive: false,
            tmplSelector: '#servicesTmpl',
            emptyTmplSelector: '#emptyServicesTmpl'
        });
        TabFilter.Tabs.items.push(followersTab, servicesTab);
        TabFilter.Filters.add({
            name: 'sort',
            elem: $('#sortDropDown'),
            getVal: function(){
                return this.elem.dropdown('get value') == ''
                    ? '@((byte)SortFilter.New)' 
                    : this.elem.dropdown('get value');
            },
            updateState: function(newVal){
                this.elem.dropdown('set selected', newVal);
            }
        });
        TabFilter.init('@Url.Action("Index", "UserProfile", new{ name = Model.UserName })', {
            beforeLoad: function(){
                $('.dot-loader-wrapper').addClass('active');
            },
            onSuccess: function(resp, tab){
                var html;
                if(resp.length == 0 && TabFilter.page == 1){
                    html = $(tab.emptyTmplSelector).html();
                    tab.content.html(html);
                    $('.dot-loader-wrapper').removeClass('active');
                } else if(resp.length > 0) {
                    if((tab.parentTab != undefined && tab.parentTab != null && tab.parentTab.name == 'posts') || tab.name == 'posts/published'){
                        resp.forEach(function(elem){
                            elem.LastEdit += elem.LastEdit[elem.LastEdit - 1] == 'Z' ? '' : 'Z';
                            if(elem.PublishDate != null){
                                elem.PublishDate += elem.PublishDate[elem.PublishDate - 1] == 'Z' ? '' : 'Z';
                                elem.PublicTimeStr = ViewHelper.getPastTense(new Date(elem.PublishDate).getTime());
                            } else{
                                elem.PublicTimeStr = ViewHelper.getPastTense(new Date(elem.LastEdit).getTime());
                            }
                        });
                    }
                    var tmpl = $.templates(tab.tmplSelector);
                    html = tmpl.render(resp);

                    if(TabFilter.loadNextPage) {
                        tab.content.append(html);
                    } else{
                        tab.content.html(html);
                    }
                }
                var $dimm = $('.post-item.hide-adult-content:not(.dimmed,.dimmable)');
                $dimm.dimmer({
                    closable: false
                });
                $dimm.dimmer('show');
                for(var i = 0; i < grids.length; i++){
                    if(tab.name == grids[i].tabName){
                        grids[i].elem.masonry('reloadItems');
                        grids[i].elem.imagesLoaded(function(){
                            grids[i].elem.masonry('layout');
                            $('.dot-loader-wrapper').removeClass('active');
                            resp.forEach(function(elem){
                                $('.column[data-post-id="' + elem.Id + '"] .dropdown').dropdown({
                                    action: 'hide',
                                    on: 'hover'
                                });
                            });
                        }).progress(function(){
                            grids[i].elem.masonry('layout');
                        });
                        break;
                    }
                }
            },
            onError: function () {
                $('.dot-loader-wrapper').removeClass('active');
                iziToast.error({
                    title: 'Упс...',
                    message: 'Ошибка при загрузке работ'
                });
            },
            ajax: {
                type: 'post'
            }
        });
        Scrolling.init('footer', function () {
            if (!TabFilter.loading) {
                var lastTab = TabFilter.Tabs.getLastActiveTab();
                if(lastTab.name != 'followings' && lastTab.name != 'followers'){
                    TabFilter.loadNext();
                }
            }
        });
        $('#sortDropDown').dropdown({
            onChange: function(){
                TabFilter.refresh();
            }
        });
        $('.social.dropdown').dropdown();
    });
</script>