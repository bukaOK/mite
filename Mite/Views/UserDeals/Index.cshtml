@using Mite.CodeData.Constants
@using Mite.CodeData.Enums
@using Mite.Helpers
@{
    ViewBag.Title = "Заказы";
    var isAuthor = User.IsInRole(RoleNames.Author);
    var isModer = User.IsInRole(RoleNames.Moderator);
}
@section styles{
    <style>
        .ui.grid.tab{
            margin: 0;
        }
        .secondary.menu[role="tablist"]{
            margin-bottom: 0;
        }
    </style>
}
<div class="ui segment">
    <h2 class="ui dividing header">Заказы</h2>
    @if (isAuthor || isModer)
    {
        <div class="ui secondary stackable menu" role="tablist">
            <a class="active item" role="tab" data-tab="incoming">Входящие</a>
            <a class="item" role="tab" data-tab="outgoing">Исходящие</a>
            @if (isModer)
            {
                <a class="item" role="tab" data-tab="moder">Модератору</a>
            }
        </div>
        <div class="ui stackable grid tab" data-tab="incoming" role="tabpanel">
            <div class="three wide column">
                <div class="ui vertical secondary pointing menu" role="tablist">
                    <a class="active item" role="tab" data-tab="new">Новые</a>
                    <a class="item" role="tab" data-tab="expectpayment">Ожидает оплаты</a>
                    <a class="item" role="tab" data-tab="expectclient">Ожидает подтверждения</a>
                    <a class="item" role="tab" data-tab="dispute">В споре</a>
                    <a class="item" role="tab" data-tab="confirmed">Подтвержденные</a>
                    <a class="item" role="tab" data-tab="moderconfirmed">Подтв. модератором</a>
                    <a class="item" role="tab" data-tab="rejected">Отклоненные</a>
                    <a class="item" role="tab" data-tab="moderrejected">Отклон. модератором</a>
                </div>
            </div>
            <div class="twelve wide column">
                <div class="ui active tab" role="tabpanel" data-tab="new"></div>
                <div class="ui tab" role="tabpanel" data-tab="expectpayment"></div>
                <div class="ui tab" role="tabpanel" data-tab="expectclient"></div>
                <div class="ui tab" role="tabpanel" data-tab="dispute"></div>
                <div class="ui tab" role="tabpanel" data-tab="confirmed"></div>
                <div class="ui tab" role="tabpanel" data-tab="moderconfirmed"></div>
                <div class="ui tab" role="tabpanel" data-tab="rejected"></div>
                <div class="ui tab" role="tabpanel" data-tab="moderrejected"></div>
                <div class="dot-loader-wrapper">
                    <div class="dot-loader">
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="ui stackable grid tab" data-tab="outgoing" role="tabpanel">
            <div class="three wide column">
                <div class="ui vertical secondary pointing menu" role="tablist">
                    <a class="item" role="tab" data-tab="new">Новые</a>
                    <a class="item" role="tab" data-tab="expectpayment">Ожидает оплаты</a>
                    <a class="item" role="tab" data-tab="expectclient">Ожидает подтверждения</a>
                    <a class="item" role="tab" data-tab="dispute">В споре</a>
                    <a class="item" role="tab" data-tab="confirmed">Подтвержденные</a>
                    <a class="item" role="tab" data-tab="moderconfirmed">Подтв. модератором</a>
                    <a class="item" role="tab" data-tab="rejected">Отклоненные</a>
                    <a class="item" role="tab" data-tab="moderrejected">Отклон. модератором</a>
                </div>
            </div>
            <div class="twelve wide column">
                <div class="ui tab" role="tabpanel" data-tab="new"></div>
                <div class="ui tab" role="tabpanel" data-tab="expectpayment"></div>
                <div class="ui tab" role="tabpanel" data-tab="expectclient"></div>
                <div class="ui tab" role="tabpanel" data-tab="dispute"></div>
                <div class="ui tab" role="tabpanel" data-tab="confirmed"></div>
                <div class="ui tab" role="tabpanel" data-tab="moderconfirmed"></div>
                <div class="ui tab" role="tabpanel" data-tab="rejected"></div>
                <div class="ui tab" role="tabpanel" data-tab="moderrejected"></div>
                <div class="dot-loader-wrapper">
                    <div class="dot-loader">
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                    </div>
                </div>
            </div>
        </div>
        if (isModer)
        {
            <div class="ui stackable grid tab" data-tab="moder" role="tabpanel">
                <div class="three wide column">
                    <div class="ui vertical secondary pointing menu" role="tablist">
                        <a class="item" role="tab" data-tab="dispute">В споре</a>
                    </div>
                </div>
                <div class="twelve wide column">
                    <div class="ui tab" role="tabpanel" data-tab="dispute"></div>
                    <div class="dot-loader-wrapper">
                        <div class="dot-loader">
                            <div class="dot"></div>
                            <div class="dot"></div>
                            <div class="dot"></div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="ui stackable grid">
            <div class="three wide column">
                <div class="ui vertical secondary pointing menu" role="tablist">
                    <a class="active item" role="tab" data-tab="new">Новые</a>
                    <a class="item" role="tab" data-tab="expectpayment">Ожидает оплаты</a>
                    <a class="item" role="tab" data-tab="expectclient">Ожидает подтверждения</a>
                    <a class="item" role="tab" data-tab="dispute">В споре</a>
                    <a class="item" role="tab" data-tab="confirmed">Подтвержденные</a>
                    <a class="item" role="tab" data-tab="moderconfirmed">Подтв. модератором</a>
                    <a class="item" role="tab" data-tab="rejected">Отклоненные</a>
                    <a class="item" role="tab" data-tab="moderrejected">Отклон. модератором</a>
                </div>
            </div>
            <div class="twelve wide column">
                <div class="ui tab" role="tabpanel" data-tab="new"></div>
                <div class="ui tab" role="tabpanel" data-tab="expectpayment"></div>
                <div class="ui tab" role="tabpanel" data-tab="expectclient"></div>
                <div class="ui tab" role="tabpanel" data-tab="dispute"></div>
                <div class="ui tab" role="tabpanel" data-tab="confirmed"></div>
                <div class="ui tab" role="tabpanel" data-tab="moderconfirmed"></div>
                <div class="ui tab" role="tabpanel" data-tab="rejected"></div>
                <div class="ui tab" role="tabpanel" data-tab="moderrejected"></div>
                <div class="dot-loader-wrapper">
                    <div class="dot-loader">
                        <div class="dot"></div>
                        <div class="dot"></div>
                        <div class="dot"></div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script type="text/x-jsrender" id="dealsTmpl">
    <div class="ui divided items">
        {{for}}
        <div class="item">
            <a class="ui tiny image" href="@Url.Action("Show", "Deals")/{{:Id}}">
                <img src="{{:ImageSrc}}" />
            </a>
            <div class="content">
                <a class="header" href="@Url.Action("Show", "Deals")/{{:Id}}">{{:Title}}</a>
                <div class="meta">
                    <span title="Цена">{{:Price}}</span>
                    <span title="Осталось">{{:EndDate}}</span>
                </div>
                <div class="description">{{:Description}}</div>
                {{if forModer}}
                <div class="extra">
                    <a class="ui violet compact button" href="@Url.Action("BindDeal", "Moder")/{{:Id}}">Разрешить</a>
                </div>
                {{/if}}
            </div>
        </div>
        {{/for}}
    </div>
</script>
<script type="text/html" id="emptyDealsTmpl">
    <h3 class="ui center aligned header">
        <i class="frown icon"></i>
        Заказы не найдены
    </h3>
</script>
<script type="text/html" id="errorDealsTmpl">
    <div class="ui icon red message">
        <i class="warning circle icon"></i>
        <div class="content">
            <div class="header">Упс...</div>
            <p>Ошибка при загрузке заказов</p>
        </div>
    </div>
</script>
@Scripts.Render("~/bundles/jsrender")
<script>
    var isAuthor = @isAuthor.ToString().ToLower();
    var isModer = @isModer.ToString().ToLower();
    $(function () {
        $('.deals.item').addClass('active');
        var tabs = [];
        TabFilter.range = 30;

        if (isAuthor || isModer) {
            var incomingTab = new Tab({
                name: 'incoming',
                isActive: true,
                parentTab: null
            });
            tabs.push(incomingTab);
            incomingTab.content.find('.item[data-tab]').each(function (i, elem) {
                var tabSettings = {
                    name: elem.dataset.tab,
                    parentTab: incomingTab,
                    $item: $(elem),
                    $content: $('.tab[data-tab="incoming"] .tab[data-tab="' + elem.dataset.tab + '"]')
                };
                if (i === 0) {
                    tabSettings.isActive = true;
                } else {
                    tabSettings.isActive = false;
                }
                tabs.push(new Tab(tabSettings));
            });
            var outgoingTab = new Tab({
                name: 'outgoing',
                parentTab: null
            });
            tabs.push(outgoingTab);
            outgoingTab.content.find('.item[data-tab]').each(function (i, elem) {
                tabs.push(new Tab({
                    name: elem.dataset.tab,
                    parentTab: outgoingTab,
                    $item: $(elem),
                    $content: $('.tab[data-tab="outgoing"] .tab[data-tab="' + elem.dataset.tab + '"]')
                }));
            });
            if (isModer) {
                var moderTab = new Tab({
                    name: 'moder',
                    parentTab: null
                });
                tabs.push(moderTab);
                moderTab.content.find('.item[data-tab]').each(function (i, elem) {
                    tabs.push(new Tab({
                        name: elem.dataset.tab,
                        parentTab: moderTab,
                        $item: $(elem),
                        $content: $('.tab[data-tab="moder"] .tab[data-tab="' + elem.dataset.tab + '"]')
                    }));
                });
            }
        } else {
            var outgoingTab = new Tab({
                name: 'outgoing',
                parentTab: null,
                isActive: true
            });
            tabs.push(outgoingTab);
            $('.item[data-tab]').each(function (i, elem) {
                var tabSettings = {
                    name: elem.dataset.tab,
                    parentTab: outgoingTab,
                    $item: $(elem),
                    $content: $('.tab[data-tab="' + elem.dataset.tab + '"]')
                };
                if (i === 0) {
                    tabSettings.isActive = true;
                } else {
                    tabSettings.isActive = false;
                }
                tabs.push(new Tab(tabSettings));
            });
        }
        TabFilter.Tabs.items = tabs;
        TabFilter.init('@Url.Action("Index", "UserDeals")', {
            beforeLoad: function () {
                $('.dot-loader-wrapper').addClass('active');
            },
            onSuccess: function (resp, tab) {
                if (resp.length == 0 && TabFilter.page == 1) {
                    html = $('#emptyDealsTmpl').html();
                    tab.content.html(html);
                } else if (resp.length > 0) {
                    var tmpl = $.templates('#dealsTmpl');
                    html = tmpl.render(resp);

                    if (TabFilter.loadNextPage) {
                        tab.content.append(html);
                    } else {
                        tab.content.html(html);
                    }
                }
            },
            onError: function (jqXhr, tab) {
                tab.content.html($('#errorDealsTmpl').html());
            },
            onComplete: function (jqXhr) {
                $('.dot-loader-wrapper').removeClass('active');
            }
        });
    });
</script>

