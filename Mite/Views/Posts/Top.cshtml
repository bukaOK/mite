@using Mite.Enums
@{
    ViewBag.Title = "Публикации";
}
@Scripts.Render("~/bundles/grid")
<div class="loader-wrapper"><div class="ui active loader"></div></div>
<div class="ui stackable menu">
    <div class="item">
        <i class="filter icon"></i>
        Сначала&nbsp;
        <div class="ui inline dropdown" id="sortType">
            <div class="text">новые</div>
            <i class="dropdown icon"></i>
            <div class="menu">
                <div class="active item" data-text="новые" data-value="@((byte)SortFilter.New)">Новые</div>
                <div class="item" data-text="высший рейтинг" data-value="@((byte)SortFilter.Popular)">Высший рейтинг</div>
                <div class="item" data-text="старые" data-value="@((byte)SortFilter.Old)">Старые</div>
            </div>
        </div>
    </div>
    <div class="item">
        <i class="calendar icon"></i>
        Искать за&nbsp;
        <div class="ui inline dropdown" id="postTimeFilter">
            <div class="text">все время</div>
            <i class="dropdown icon"></i>
            <div class="menu">
                <div class="active item" data-text="все время" data-value="@((byte)PostTimeFilter.All)">Все время</div>
                <div class="item" data-text="последний месяц" data-value="@((byte)PostTimeFilter.Month)">Последний месяц</div>
                <div class="item" data-text="последнюю неделю" data-value="@((byte)PostTimeFilter.Week)">Последняя неделя</div>
                <div class="item" data-text="последний день" data-value="@((byte)PostTimeFilter.Day)">Последний день</div>
            </div>
        </div>
    </div>
    <div class="item">
        <i class="users icon"></i>
        Искать среди&nbsp;
        <div class="ui inline dropdown" id="postUserFilter">
            <div class="text">всех</div>
            <i class="dropdown icon"></i>
            <div class="menu">
                <div class="active item" data-text="всех" data-value="@((byte)PostUserFilter.All)">Все</div>
                <div class="item" data-text="моих подписок" data-value="@((byte)PostUserFilter.OnlyFollowings)">Мои подписки</div>
            </div>
        </div>
    </div>
    <div class="right item">
        <div class="ui transparent icon input">
            <input type="text" placeholder="Поиск..." id="postsSearch" />
            <i class="search link icon" onclick="SearchFilters.changeFilter()"></i>
        </div>
    </div>
</div>
<div class="ui stackable grid">
    <div class="three wide column">
        <div class="ui top-tags loading segment">
            <h3 class="ui dividing header">Теги</h3>
        </div>
    </div>
    <div class="thirteen wide column">
        <div class="ui posts stackable three column basic segment grid" id="postsGrid">
        </div>
    </div>
</div>

<script id="topPostTmpl" type="text/x-jsrender">
    <div class="column">
        <div class="ui segment {{if Cover != null}}invert{{/if}} post-item" {{if Cover != null}}
             style="background: linear-gradient(rgba(181, 64, 198, 0.6),rgba(181, 64, 198, 0.5)), url({{:Cover}})" {{/if}}>
            <div class="extra content">
                <img src="{{:User.AvatarSrc}}" class="ui avatar image" />
                <a href="/user/profile/{{:User.UserName}}" class="username">{{:User.UserName}}</a>
                <span style="float: right">
                    <a class="ui compact inverted {{if Cover == null}}violet {{/if}}button" href="/posts/showpost/{{:Id}}">
                        {{if IsImage}}
                        Смотреть
                        {{else}}
                        Читать
                        {{/if}}
                    </a>
                </span>
            </div>
            <div class="ui {{if Cover != null}}inverted {{/if}}divider"></div>
            {{if IsImage}}
            <a href="/posts/showpost/{{:Id}}">
                <img src="{{:Content}}" class="ui image" style="margin-bottom: 10px" />
            </a>
            {{else}}
            <a class="content" href="/posts/showpost/{{:Id}}">
                {{:Content}}
            </a>
            {{/if}}
            <div class="ui {{if Cover != null}}inverted {{/if}}divider"></div>
            <div class="extra content">
                <a class="ui {{if Cover != null}}inverted {{/if}}header" style="margin-bottom: 5px" href="/posts/showpost/{{:Id}}">
                    {{:Title}}
                    <span class="sub header">
                        {{:Description}}
                    </span>
                </a>
                {{for Tags ~Cover=Cover}}
                <a class="ui{{if ~Cover != null}} invert{{/if}} label" onclick="loadTag('{{>#data}}')">{{>#data}}</a>
                {{/for}}
            </div>
            <div class="ui {{if Cover != null}}inverted {{/if}} divider"></div>
            <div class="extra content">
                <span>{{:PublicTimeStr}}</span>
                <div class="right floated" style="float: right">
                    <i class="yellow star icon"></i>{{:Rating}}
                    <i class="{{if Cover == null}}blue{{else}}black{{/if}} unhide icon"></i>{{:Views}}
                </div>
            </div>
        </div>
    </div>
</script>
<template id="topTagsTmpl">
    <div class="ui column">
        <div class="ui top-tags loading segment">
            <h3 class="ui dividing header">Теги</h3>
        </div>
    </div>
</template>
<template id="emptyResultTmpl">
    <div class="column"></div>
    <div class="column">
        <h2 class="ui center aligned icon header" style="color: #6D6788; margin-top: 20px;">
            <i class="frown icon"></i>
            <span class="content">
                К сожалению, по вашему запросу ничего не найдено.
            </span>
        </h2>
    </div>
</template>
<script>
    var tagsInitialized = false;
    function loadTag(name) {
        $('#postsSearch').val(name);
        SearchFilters.changeFilter();
    }
    function initTags() {
        $.ajax({
            url: '/api/tags',
            success: function (resp) {
                var tmpl = '<a class="ui label" onclick="loadTag(\'{{:Name}}\')">{{:Name}}' +
                    '{{if Popularity > 0}}<span class="detail">{{:Popularity}}</span>{{/if}}</a>'
                var html = $.templates(tmpl).render(resp);
                $('.top-tags').append(html);
                $('.top-tags').removeClass('loading');
            },
            error: function (jqXhr) {
                alert('Ошибка при загрузке тегов');
            }
        });
    }
    $(function () {
        initTags();
        var grid = $('#postsGrid').masonry({
            itemSelector: '.column'
        });
        $('.ui.dropdown').dropdown({
            onChange: function () {
                if (SearchFilters.initialized) {
                    SearchFilters.changeFilter();
                }
            }
        });
        SearchFilters.init({
            beforeLoad: function(){
                $('.loader-wrapper').show();
            },
            onSuccess: function (resp) {
                if (resp.status == null || resp.status == undefined) {
                    resp = JSON.parse(resp);
                }
                resp.data.forEach(function (elem) {
                    elem.LastEdit += elem.LastEdit[elem.LastEdit - 1] == 'Z' ? '' : 'Z';
                    elem.PublicTimeStr = ViewHelper.getPastTense(new Date(elem.LastEdit).getTime());
                });
                
                $('#postsGrid .loader').remove();
                if (resp.data.length > 0) {
                    if (!SearchFilters._loadNextPage) {
                    }
                    var tmpl = $.templates('#topPostTmpl');
                    var html = tmpl.render(resp.data);

                    if (SearchFilters._loadNextPage) {
                        $('#postsGrid').append(html);
                    } else {
                        $('#postsGrid').html(html);
                    }
                }
                else if(SearchFilters._page <= 1) {
                    $('#postsGrid').html($('#emptyResultTmpl').html());
                }
                grid.imagesLoaded(function () {
                    grid.masonry('reloadItems').masonry('layout');
                    $('.loader-wrapper').hide();
                });
            },
            onError: function () {
                alert('Ошибка сервера');
                $('.loader-wrapper').hide();
            },
            ajax: {
                type: 'post',
                url: '@Url.Action("Top", "Posts")',
                checkResponseLength: function (resp) {
                    if (resp.status == null || resp.status == undefined) {
                        resp = JSON.parse(resp);
                    }
                    if (resp.data.length == 0) {
                        return false;
                    }
                    return true;
                }
            },
            filters: [
                {
                    name: 'input',
                    selector: '#postsSearch',
                    getVal: function () {
                        return $(this.selector).val();
                    },
                    updateState: function (newVal) {
                        $(this.selector).val(newVal);
                    }
                },
                {
                    name: 'sortFilter',
                    selector: '#sortType',
                    getVal: function () {
                        return $(this.selector).dropdown('get value') == ''
                            ? '@((byte)SortFilter.New)' : $(this.selector).dropdown('get value');
                    },
                    updateState: function (newVal) {
                        $(this.selector).dropdown('set selected', newVal);
                    }
                },
                {
                    name: 'postTimeFilter',
                    selector: '#postTimeFilter',
                    getVal: function () {
                        return $(this.selector).dropdown('get value') == ''
                            ? '0' : $(this.selector).dropdown('get value');
                    },
                    updateState: function (newVal) {
                        $(this.selector).dropdown('set selected', newVal);
                    }
                },
                {
                    name: 'postUserFilter',
                    selector: '#postUserFilter',
                    getVal: function () {
                        return $(this.selector).dropdown('get value') == ''
                            ? '0' : $(this.selector).dropdown('get value');
                    },
                    updateState: function (newVal) {
                        $(this.selector).dropdown('set selected', newVal);
                    }
                }
            ]
        });
        Scrolling.init('footer', function () {
            return SearchFilters.loadNext();
        });
        SearchFilters.loadNext();
        $('.ui.checkbox').checkbox();
    })
</script>

