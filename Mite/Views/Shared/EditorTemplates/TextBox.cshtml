@using System.Reflection
@using Mite.Attributes.DataAnnotations
@model object
    
@{
    var dataType = Html.ViewData.ModelMetadata.DataTypeName;
    if (string.IsNullOrEmpty(dataType) || dataType == "EmailAddress")
    {
        dataType = "text";
    }
    var phAttr = (ViewData.ModelMetadata)
            .ContainerType
            .GetProperty(ViewData.ModelMetadata.PropertyName)
            .GetCustomAttribute<PlaceholderAttribute>(false);
    var placeholder = phAttr?.Placeholder ?? Html.DisplayName("").ToHtmlString();
}
@if (ViewData["InputIcon"] != null)
{
    var iconClass = "icon " + ViewData["InputIcon"];
    <div class="field">
        <div class="ui left icon input">
            @if(ViewData["WithLabel"] as bool? == true)
            {
                <label>@Html.DisplayName("")</label>
            }
            @*<label style="display: none">@Html.DisplayName("")</label>*@
            <i class="@iconClass"></i>
            @Html.TextBox("", Model, new { placeholder = placeholder, type = dataType})
        </div>
    </div>
}
else
{
    <div class="field">
        @if (ViewData["WithLabel"] as bool? == true)
        {
            <label>@Html.DisplayName("")</label>
        }
        @Html.TextBox("", Model, new {type = dataType, placeholder = placeholder})
    </div>
}
@*
        Если передавать данные из EditorTemplate в View =>

    @Html.EditorFor(modelItem => item.YourProperty,
      new { htmlAttributes = new { @class = "verificationStatusSelect", style = "Width:50px" } })

        @Html.TextBoxFor(m => m, ViewData["htmlAttributes"])
*@
