@using Mite.CodeData
@using Mite.Extensions
@model Mite.Models.RegisterModel

@{
    ViewBag.Title = "Регистрация";
    var externalLogins = Context.GetOwinContext().Authentication.GetAuthenticationTypes();
    var vkLogin = externalLogins.First(x => x.AuthenticationType.ToLower() == "vkontakte");
    var facebookLogin = externalLogins.First(x => x.AuthenticationType.ToLower() == "facebook");
    var twitterLogin = externalLogins.First(x => x.AuthenticationType.ToLower() == "twitter");
}
<div class="ui center aligned grid">
    <div class="sixteen wide mobile eight wide tablet six wide computer column">
        <h2 class="ui blue header">
            <i class="checkmark icon"></i>
            <span class="content">Регистрация</span>
        </h2>
        <div class="ui left aligned top attached segment">
            @using (Html.BeginForm("InitExternalAuth", "Account", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "externalLoginForm", @class = "ui form" }))
            {
                <div class="fields">
                    <div class="field">
                        @Html.AntiForgeryToken()
                        <span style="font-size: medium; font-weight: bold">Войти с помощью:&nbsp;</span>
                    </div>
                    <div class="field">
                        <button type="submit" class="ui circular facebook icon button" name="provider" value="@facebookLogin.AuthenticationType">
                            <i class="facebook icon"></i>
                        </button>
                        <button type="submit" class="ui circular vk icon button" name="provider" value="@vkLogin.AuthenticationType">
                            <i class="vk icon"></i>
                        </button>
                        <button type="submit" class="ui circular twitter icon button" name="provider" value="@twitterLogin.AuthenticationType">
                            <i class="twitter icon"></i>
                        </button>
                    </div>
                </div>
            }
            <div class="ui horizontal divider">Or be classical</div>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "ui register form" }))
            {
                @Html.EditorFor(x => x.UserName, new { InputIcon = "hashtag" })
                @Html.EditorFor(x => x.Email, new { InputIcon = "at" })
                @Html.EditorFor(x => x.Password, new { InputIcon = "lock" })
                <div class="ui message" style="display: none" id="pass-strength"></div>
                @Html.EditorFor(x => x.ConfirmPassword, new { InputIcon = "mail forward" })
                @Html.EditorFor(x => x.RegisterRole, new { Inline = true })
                <div class="field" style="display: none">
                    <div class="ui left icon input">
                        <i class="key icon"></i>
                        @Html.TextBoxFor(x => x.InviteKey, new { placeholder = Html.DisplayNameFor(x => x.InviteKey), value = ViewBag.InviteKey })
                    </div>
                </div>
                @Html.AntiForgeryToken()
                <div class="field">
                    <div class="g-recaptcha" data-sitekey="6LcTGyUUAAAAAJoKAP_S5zSjEtEqdUpY4GiWg2Nx"></div>
                </div>
                <button type="submit" class="ui animated blue button">
                    <span class="visible content">Зарегистрироваться</span>
                    <span class="hidden content"><i class="checkmark icon"></i></span>
                </button>
                @Html.ValidationSum()
            }
        </div>
    </div>
</div>
@section scripts{
<script>
    $(function () {
        $('.ui.dropdown').dropdown();
        $('[name=@Html.NameFor(x => x.RegisterRole)]').parents('.checkbox').checkbox({
            onChange: function () {
                if (this.value === '@((byte)RegisterRoles.Author)') {
                    $('#InviteKey').parents('.field').show();
                } else {
                    $('#InviteKey').parents('.field').hide();
                }
            }
        });
        if ($('[name=@Html.NameFor(x => x.RegisterRole)]:checked').val() == '@((byte)RegisterRoles.Author)') {
            $('#InviteKey').parents('.field').show();
        }
        @Html.Raw(Html.FormValidation<Mite.Models.RegisterModel>(".ui.register.form"))
        initPassStrength('#Password');
    });
</script>
}