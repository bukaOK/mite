@using Mite.Extensions
@model Mite.Models.LoginModel

@{
    ViewBag.Title = "Вход";
    var externalLogins = Context.GetOwinContext().Authentication.GetAuthenticationTypes();
    var vkLogin = externalLogins.First(x => x.AuthenticationType.ToLower() == "vkontakte");
    var facebookLogin = externalLogins.First(x => x.AuthenticationType.ToLower() == "facebook");
    var twitterLogin = externalLogins.First(x => x.AuthenticationType.ToLower() == "twitter");
}
<div class="ui middle aligned center aligned grid">
    <div class="fourteen wide mobile ten wide tablet six wide computer column">
        <h2 class="ui violet header">
            <i class="sign in icon"></i>
            <span class="content">Вход</span>
        </h2>
        <div class="ui left aligned raised segment">
            @using (Html.BeginForm("InitExternalAuth", "Account", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "ui form", id = "externalLoginForm"}))
            {
                <div class="fields">
                    <div class="centered field">
                        @Html.AntiForgeryToken()
                        <span style="font-size: medium; font-weight: bold">Войти с помощью:&nbsp;</span>
                    </div>
                    <div class="centered field">
                        <button type="submit" class="ui circular facebook icon button" name="provider" value="@facebookLogin.AuthenticationType">
                            <i class="facebook icon"></i>
                        </button>
                        <button type="submit" class="ui circular vk icon button" name="provider" value="@vkLogin.AuthenticationType">
                            <i class="vk icon"></i>
                        </button>
                        <button type="submit" class="ui circular twitter icon button" name="provider" value="@twitterLogin.AuthenticationType">
                            <i class="twitter icon"></i>
                        </button>
                    </div>
                </div>
            }
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "ui login form" }))
            {
                <div class="ui horizontal divider">Or be classical</div>
                @Html.EditorFor(x => x.UserName, new { InputIcon = "hashtag" })
                @Html.EditorFor(x => x.Password, new { InputIcon = "lock" })
                @Html.EditorFor(x => x.Remember)
                @Html.AntiForgeryToken()
                <div class="field">
                    <div class="g-recaptcha" data-sitekey="6LcTGyUUAAAAAJoKAP_S5zSjEtEqdUpY4GiWg2Nx"></div>
                </div>
                <button type="submit" class="ui animated primary button">
                    <span class="visible content">Войти</span>
                    <span class="hidden content"><i class="sign in icon"></i></span>
                </button>
                <a id="forgotPassBtn" style="cursor: pointer" onclick="">Забыли пароль?</a>
                @Html.ValidationSum()
            }
        </div>
    </div>
</div>
<div class="ui small modal" id="forgotPassModal">
    <i class="close icon"></i>
    <div class="header">
        Восстановление пароля
    </div>
    <div class="content">
        @Html.Partial("ForgotPassword", new Mite.Models.ForgotPassModel())
    </div>
</div>
<script>
    $(function () {
        $(".ui.form").form({
            on: "submit",
            fields: {
                UserName: {
                    rules: [
                        {
                            type: "empty",
                            prompt: $("#UserName").data("valRequired")
                        }
                    ]
                },
                Password: {
                    rules: [
                        {
                            type: "empty",
                            prompt: $("#Password").data("valRequired")
                        }
                    ]
                }
            }
        });
        $(".checkbox").checkbox();
    });
</script>