
@{
    ViewBag.Title = "Панель модератора";
}
@section Styles{
    <style>
        body, .pusher {
            background-color: white !important;
        }
    </style>
}
@Scripts.Render("~/bundles/api")
<h1>Панель модератора</h1>
<nav class="ui stackable pointing secondary tabs menu" style="border: none">
    <a class="active item" data-tab="tagunchecked">Непроверенные теги</a>
    <a class="item" data-tab="tagchecked">Проверенные теги</a>
    <a class="item" data-tab="cities">Города</a>
</nav>
<div class="ui loading basic segment tab" data-tab="tagunchecked">
    <table class="ui celled table unchecked">
        <thead>
            <tr>
                <th>Id</th>
                <th>Название</th>
                <th>Действие</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<div class="ui loading basic segment tab" data-tab="tagchecked">
    <button class="ui primary button" onclick="showTagAddModal(this)">Добавить тег</button>
    <table class="ui celled table checked">
        <thead>
            <tr>
                <th>Id</th>
                <th>Название</th>
                <th>Действие</th>
                <th>Подтвержден</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<div class="ui loading basic segment tab" data-tab="cities">
    <button class="ui primary button" onclick="showCityAddModal(this)">Добавить город</button>
    <table class="ui celled table">
        <thead>
            <tr>
                <th>Название</th>
                <th>Регион</th>
                <th>Федеральный округ</th>
                <th>Действие</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<script id="tagRowTmpl" type="text/x-jsrender">
    <tr data-id="{{:Id}}" data-name="{{:Name}}" data-confirmed="{{:IsConfirmed}}" data-checked="{{:Checked}}">
        <td>{{:Id}}</td>
        <td>{{:Name}}</td>
        <td>
            {{if !IsConfirmed}}
            <button class="ui margined compact tag-confirm primary button" onclick="confirmTag(this)">Подтвердить</button>
            <button class="ui margined compact blue button" onclick="showTagBindModal('{{:Id}}')">Привязать к другому</button>
            {{/if}}
            <button class="ui margined compact tag-change button" onclick="showTagChangeModal(this)">Изменить</button>
            <button class="ui margined compact tag-del red button" onclick="delTag(this)">Удалить</button>
            {{if !Checked}}
            <button class="ui margined compact teal button" onclick="checkTag(this)">Проверить</button>
            {{/if}}
        </td>
        {{if Checked}}
        <td>
            {{if IsConfirmed}}
            Да
            {{else}}
            Нет
            {{/if}}
        </td>
        {{/if}}
    </tr>
</script>
<div class="ui small modal" id="tagModal">
    <div class="header">Изменение тега</div>
    <div class="content">
        <form class="ui form">
            <div class="field">
                <input type="text" id="tagNameField" />
            </div>
        </form>
    </div>
    <div class="actions">
        <div class="ui approve green button">Изменить</div>
        <div class="ui cancel red button">Отмена</div>
    </div>
</div>
<div class="ui small modal" id="tagBindModal">
    <i class="close icon"></i>
    <div class="header">Привязка тегов</div>
    <div class="content">
        <form class="ui form">
            <div class="two fields">
                <div class="field">
                    <label>Id старого тега</label>
                    <input type="text" id="oldTagBind" autocomplete="off"/>
                </div>
                <div class="field">
                    <label>Id нового тега</label>
                    <input type="text" id="newTagBind" autocomplete="off"/>
                </div>
            </div>
        </form>
    </div>
    <div class="actions">
        <button class="ui primary button" onclick="bindTag($('#oldTagBind').val(), $('#newTagBind').val())">Привязать</button>
    </div>
</div>
@{ Html.RenderPartial("_CityEdit", new Mite.Models.CityModel()); }
<script>
    function showTagChangeModal(ev) {
        var $tagRow = $(ev).parents('tr');
        $('#tagNameField').val($tagRow.data('name'));
        $('#tagModal .approve.button').html('Изменить');
        $('#tagModal > .header').html('Изменение тега');

        $('#tagModal').modal({
            onApprove: function ($elem) {
                $.ajax({
                    url: '/api/tags',
                    type: 'put',
                    data: {
                        Name: $('#tagNameField').val(),
                        Id: $tagRow.data('id'),
                        IsConfirmed: $tagRow.data('confirmed'),
                        Checked: $tagRow.data('checked')
                    },
                    success: function () {
                        $tagRow.children('td')[0].innerHTML = $('#tagNameField').val();
                    },
                    error: function (jqXhr) {
                        alert('Ошибка во время изменения');
                    }
                });
            }
        }).modal('show');
    }
    function checkTag(ev) {
        var $tagRow = $(ev).parents('tr');
        var data = {
            Id: $tagRow.data('id'),
            Name: $tagRow.data('name'),
            IsConfirmed: $tagRow.data('confirmed'),
            Checked: true
        }
        $.ajax({
            url: '/api/tags',
            type: 'put',
            data: data,
            success: function () {
                $(ev).parents('tr')[0].remove();
                var trToInsert = $.templates('#tagRowTmpl').render(data);
                $('table.checked').prepend(trToInsert);
            },
            error: function () {
                alert('Ошибка!');
            }
        });
    }
    function showTagBindModal(oldTagId) {
        $('#oldTagBind').val(oldTagId);
        $('#tagBindModal').modal('show');
    }
    function bindTag(oldId, newId) {
        if (oldId == '' || newId == '') {
            alert('Поля не могут быть пустыми');
            return;
        }
        $.ajax({
            url: '@Url.Action("BindTag", "Moder")',
            data: {
                fromId: oldId,
                toId: newId
            },
            type: 'post',
            success: function () {
                alert('Привязка успешна');
                $('tr[data-id="' + oldId + '"]')[0].remove();
            },
            error: function (jqXhr) {
                alert('Ошибка сервера');
            }
        });
    }
    function showTagAddModal(ev) {
        $('#tagModal .approve.button').html('Добавить');
        $('#tagModal > .header').html('Добавление тега');

        $('#tagModal').modal({
            onApprove: function ($elem) {
                $(ev).addClass('loading').addClass('disabled');

                $.ajax({
                    url: '/api/tags',
                    type: 'post',
                    data: {
                        Name: $('#tagNameField').val()
                    },
                    success: function (data) {
                        $('table.checked > tbody').prepend($.templates('#tagRowTmpl').render(data));
                        $(ev).removeClass('loading').removeClass('disabled');
                    },
                    error: function (jqXhr) {
                        alert('Ошибка во время добавления');
                    }
                });
            }
        }).modal('show');
    }
    function confirmTag(ev) {
        var data = {
            Id: $(ev).parents('tr').data('id'),
            Name: $(ev).parents('tr').data('name'),
            IsConfirmed: true,
            Checked: true
        };
        $.ajax({
            url: '/api/tags',
            type: 'put',
            data: data,
            success: function (resp) {
                $(ev).parents('tr').remove();

                var tagRowHtml = $.templates('#tagRowTmpl').render(data);
                $('table.checked tbody').prepend(tagRowHtml);
            },
            error: function (jqXhr) {
                alert('Ошибка сервера');
            }
        });
    }
    function delTag(ev) {
        $.ajax({
            url: '/api/tags/' + $(ev).parents('tr').data('id'),
            type: 'delete',
            success: function () {
                $(ev).parents('tr').remove();
            },
            error: function () {
                alert('Ошибка во время удаления');
            }
        });
    }
    function initTags() {
        $.ajax({
            url: '@Url.Action("Tags")',
            type: 'post',
            success: function (resp) {
                if (resp.status == undefined) {
                    resp = JSON.parse(resp);
                }
                var tagsRowTmpl = $.templates('#tagRowTmpl');
                var confirmedHtml = tagsRowTmpl.render(resp.data.Confirmed);
                var uncheckedHtml = tagsRowTmpl.render(resp.data.Unchecked);
                var checkedHtml = tagsRowTmpl.render(resp.data.Checked);

                $('.tab[data-tab="tagconfirmed"] tbody').html(confirmedHtml);
                $('.tab[data-tab="tagunchecked"] tbody').html(uncheckedHtml);
                $('.tab[data-tab="tagchecked"] tbody').html(checkedHtml);
                $('.tab').removeClass('loading');
            }
        });
    }
    $(function () {
        CitiesApi.init($('.tab[data-tab="cities"] tbody'));
        $('.moder-panel.item').addClass('active');
        //Грузим таблицы с тегами
        $('.ui.tabs .item').tab({
            history: true,
            historyType: 'hash'
        });
        initTags();
    });
</script>
