@using Mite.Core
@model Mite.Models.EmailSettingsModel

<h3 class="ui header">Подтверждение e-mail</h3>
@if (Model.Confirmed)
{
    <div class="ui green message">
        <p>Ваш e-mail успешно подтвержден!</p>
    </div>
}
else
{
    <div class="ui red message">
        <p>Ваш e-mail не подтвержден.</p>
    </div>
    <div class="ui yellow message" hidden id="emailSendedMsg">
        <p>На ваш почтовый ящик отправлено сообщение с подтверждением.</p>
    </div>
    <div class="ui red message" hidden id="emailSendingFailedMsg">
        <p>Не удалось отправить сообщение для подтверждения почты, попробуйте позже, если не вышло - обратитесь к администратору.</p>
    </div>
    using (Html.BeginForm("SendEmailConfirmation", "UserSettings", FormMethod.Post, new { id = "emailConfirmForm" }))
    {
        @Html.AntiForgeryToken()
        <button type="button" class="ui primary button" id="confirmEmailBtn" onclick="sendEmailConfirmation(this)">Отправить подтверждение</button>
    }
    <h3 class="ui header">Изменение e-mail</h3>
    using (Html.BeginForm("", "", FormMethod.Post, new { @class = "ui form", id = "emailChangeForm" }))
    {
        @Html.EditorFor(x => x.NewEmail)
        @Html.EditorFor(x => x.Password)
        <button type="button" class="ui primary button" onclick="changeEmail()">Изменить</button>
        <div class="ui red message" hidden id="emailSendingFailedMsg">
        </div>
    }
    <script>
        function sendEmailConfirmation(ev) {
            $(ev).addClass('loading disabled');
            $.ajax({
                url: '@Url.Action("SendEmailConfirmation", "UserSettings")',
                type: 'post',
                data: $('#emailConfirmForm').serialize(),
                success: function (resp) {
                    $('#emailSendedMsg').show();
                },
                error: function () {
                    $('#emailSendingFailedMsg').show();
                },
                complete: function () {
                    $(ev).removeClass('loading disabled');
                }
            });
        }
        function changeEmail() {
            var $form = $('#emailChangeForm');
            if(!$form.form('is valid')){
                return;
            }
            $.ajax({
                url: '@Url.Action("ChangeEmail", "UserSettings")',
                type: 'post',
                success: function (resp) {
                    var validErrorStatus = @((byte)JsonResponseStatuses.ValidationError);
                    if (resp.status == undefined) {
                        resp = JSON.parse(resp);
                    }
                    if(resp.status == validErrorStatus){
                        var errorStr = '';
                    }
                }
            })
        }
        $(function () {
            $('#emailChangeForm').form({
                on: 'submit',
                fields: {
                    NewEmail: {
                        rules: [
                            {
                                type: "empty",
                                prompt: $("#NewEmail").data("valRequired")
                            },
                            {
                                type: "email",
                                prompt: "Введите правильный e-mail"
                            }
                        ]
                    },
                    Password: {
                        rules: [
                            {
                                type: "empty",
                                prompt: $("#Password").data("valRequired")
                            }
                        ]
                    }
                }
            })
        });
    </script>
}