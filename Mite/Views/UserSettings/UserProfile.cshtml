@using Mite.Extensions
@model Mite.Models.ProfileSettingsModel

@*WithLabel используется только с TextBox!!*@

<div class="ui center aligned grid">
    @using (Html.BeginForm("UserProfile", "UserSettings", FormMethod.Post, 
        new { @class = "ui sixteen wide mobile ten wide tablet eight wide computer left aligned column form", id = "profileForm" }))
    {
        @Html.EditorFor(x => x.NickName, new { WithLabel = true })
        <div class="grouped fields">
            @Html.EditorFor(x => x.Gender)
        </div>
        <div class="two fields">
            @Html.EditorFor(x => x.FirstName, new { WithLabel = true })
            @Html.EditorFor(x => x.LastName, new { WithLabel = true })
        </div>
        <div class="four wide fields">
            @Html.EditorFor(x => x.Age, new { WithLabel = true })
        </div>
        @Html.EditorFor(x => x.About, new { WithLabel = true })
        <button type="button" class="ui primary button" onclick="updateUserProfile(this)">Сохранить</button>

        <div class="ui hidden message" style="text-align: center" id="update-state-msg">
        </div>
        @Html.ValidationSum()
    }
</div>

<script>
    $(document).ready(function () {
        $('input:text').siblings('label').show();
        $('textarea').siblings('label').show();
    });
    function updateUserProfile(ev) {
        var form = $(ev).parents('form').serialize();
        $.ajax({
            url: '/User/Settings/UserProfile',
            type: 'post',
            dataType: 'json',
            data: form,
            beforeSend: function() {
                $('#profileForm').addClass('loading');
            },
            success: function(resp) {
                $('#update-state-msg').addClass('green').removeClass('red');
            },
            error: function(resp) {
                $('#update-state-msg').addClass('red').removeClass('green');
            },
            complete: function (jqXhr) {
                console.log(jqXhr.responseJSON);
                $('#update-state-msg').removeClass('hidden').html(jqXhr.responseJSON.message);
                $('#profileForm').removeClass('loading');
            }
        });
    }
    $('.ui.checkbox').checkbox();
    $('#profileForm').form({
        on: 'submit',
        fields: {
            NickName: {
                rules: [
                    {
                        type: 'empty',
                        prompt: $('#NickName').data('valRequired')
                    },
                    {
                        type: 'regExp',
                        value: $("#NickName").data("valRegexPattern"),
                        prompt: $("#NickName").data("valRegex")
                    }
                ]
            },
            FirstName: {
                rules: [
                    {
                        type: 'regExp',
                        value: $("#FirstName").data("valRegexPattern"),
                        prompt: $("#FirstName").data("valRegex")
                    }
                ]
            },
            LastName: {
                rules: [
                    {
                        type: 'regExp',
                        value: $("#LastName").data("valRegexPattern"),
                        prompt: $("#FirstName").data("valRegex")
                    }
                ]
            },
            Age: {
                rules: [
                    {
                        type: 'regExp',
                    }
                ]
            }
        }
    });
</script>
