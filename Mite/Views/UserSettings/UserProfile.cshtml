@using Mite.Extensions
@model Mite.Models.ProfileSettingsModel

@*WithLabel используется только с TextBox!!*@
<div class="ui grid">
    <div class="sixteen wide mobile thirteen wide tablet eleven wide computer column">
        @using (Html.BeginForm("UserProfile", "UserSettings", FormMethod.Post, new { @class = "ui form", id = "profileForm" }))
    {
        @Html.EditorFor(x => x.NickName, new { WithLabel = true })
        <div class="grouped fields">
            @Html.EditorFor(x => x.Gender)
        </div>
        <div class="fields">
            <div class="two wide field">
                @Html.LabelFor(x => x.Age)
                @Html.TextBoxFor(x => x.Age, new { placeholder = "18" })
            </div>
            <div class="seven wide field">
                @Html.LabelFor(x => x.Country)
                <div class="ui fluid search selection dropdown" id="countryDrop">
                    <input type="hidden" value="@Model.Country" name="Cuntry" />
                    <i class="dropdown icon"></i>
                    <div class="default text">Страна</div>
                    <div class="menu">
                        @foreach (var country in Model.Countries)
                        {
                            <div class="item" data-value="@country.Value">@country.Text</div>
                        }
                    </div>
                </div>
            </div>
            <div class="seven wide field">
                @Html.LabelFor(x => x.City)
                <div class="ui fluid search selection dropdown" id="cityDrop">
                    <input type="hidden" value="@Model.City" name="City" />
                    <i class="dropdown icon"></i>
                    <div class="default text">Город</div>
                    <div class="menu">
                        @foreach (var city in Model.Cities)
                        {
                            <div class="item" data-value="@city.Value">@city.Text</div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(x => x.FirstName)
                @Html.TextBoxFor(x => x.FirstName, new { placeholder = "Иван" })
            </div>
            <div class="field">
                @Html.LabelFor(x => x.LastName)
                @Html.TextBoxFor(x => x.LastName, new { placeholder = "Иванов" })
            </div>
        </div>
        <div class="field">
            @Html.LabelFor(x => x.About)
            @Html.TextAreaFor(x => x.About, new { placeholder = "Люблю кушать...много кушать" })
        </div>
        <div class="field">
            <div class="ui @Html.Raw(Model.ShowOnlyFollowings ? "checked" : "") toggle checkbox" title="В топе работ будут по умолчанию показываться только те теги и пользователи, на которых вы подписались" >
                <input type="checkbox" value="true" name="@Html.NameFor(x => x.ShowOnlyFollowings)" @Html.Raw(Model.ShowOnlyFollowings == true ? "checked" : "") />
                <label>@Html.DisplayNameFor(x => x.ShowOnlyFollowings)</label>
            </div>
        </div>
        <div class="ui icon yellow message" style="display: none" id="extServMsg">
            <i class="warning icon"></i>
            <div class="content">
                <span class="header">Обнаружена ссылка!</span>
                <p>Мы обнаружили ссылку на внешний ресурс, рекомендуем добавить её в раздел "Внешние ссылки".</p>
            </div>
        </div>
        <button type="button" class="ui primary button" onclick="UserSettingsApi.updateUserProfile(this)">Сохранить</button>
        <div class="ui error message"></div>
        <div class="ui green m-success message">Изменения успешно сохранены.</div>
}
    </div>
</div>
<script>
    $('#cityDrop').dropdown({
        fullTextSearch: true,
        match: 'text'
    });
    $('#countryDrop').dropdown({
        fullTextSearch: true,
        match: 'text',
        onChange: function (value, text) {
            CitiesApi.loadCities(value).then(function (resp) {
                $('#cityDrop').dropdown('setup menu', {
                    values: resp.map(function (city, index) {
                        return {
                            name: city.Name,
                            value: city.Id
                        }
                    })
                }).dropdown('set selected', resp[0].Id);
            });
        }
    });
    var extRgx = /https?:\/\/.+/i;
    $('#About').on('input', function (ev) {
        var $msg = $('#extServMsg');
        if ($(this).val().match(extRgx)) {
            $msg.show();
        } else {
            $msg.hide();
        }
    });
    $('.ui.checkbox').checkbox();
    @Html.FormValidation("#profileForm")
</script>