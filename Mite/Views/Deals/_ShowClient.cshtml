@using Mite.CodeData.Enums
@using Mite.Extensions
@using Microsoft.AspNet.Identity
@model Mite.Models.DealClientModel

@{ 
    var userType = User.Identity.GetUserId() == Model.Client.Id ? "client" : "author";
}
@if (Model.Status == DealStatuses.New)
{
    <h3 class="ui header">Параметры</h3>
    <form class="ui form" id="dealForm">
        @Html.HiddenFor(x => x.Id)
        <div class="field">
            <label>@Html.DisplayNameFor(x => x.Demands)</label>
            @Html.TextAreaFor(x => x.Demands, new { placeholder = "Ваши требования" })
        </div>
        <button class="ui red button" type="button" onclick="DealsMvc.close(this)">
            <i class="close icon"></i>
            Закрыть сделку
        </button>
        <button class="ui green button" type="button" onclick="DealsApi.update(this, '@userType')">Сохранить</button>
        <div class="ui error message"></div>
    </form>
}
else if (Model.Status == DealStatuses.ExpectPayment)
{
    <form class="ui form" id="dealForm">
        @Html.AntiForgeryToken()
        <div class="field">@Html.HiddenFor(x => x.Id)</div>
        <div class="field">
            <button class="ui red button" type="button" onclick="DealsMvc.close(this, '@Model.Id')">
                <i class="close icon"></i>
                Закрыть сделку
            </button>
            @if (!Model.Payed)
            {
                <button class="ui primary button" type="button" onclick="DealsMvc.pay(this)">Оплатить</button>
            }
            else
            {
                <button class="ui disabled primary button" type="button" disabled>Денежная оплата совершена</button>
            }
        </div>
        @if (Model.VkReposted == false)
        {
            <div class="field">@Html.Raw(Model.Service.VkRepostCode)</div>
            <button class="ui blue compact button" type="button" onclick="DealsMvc.checkVkRepost(this, '@Model.Id')">Проверить репост</button>
        }
        else if (Model.VkReposted == true)
        {
            <div class="field">@Html.Raw(Model.Service.VkRepostCode)</div>
            <button class="ui disabled blue compact button" type="button" disabled>Репост подтвержден</button>
        }
        <div class="ui error message"></div>
    </form>
}
else if(Model.Status == DealStatuses.ExpectClient)
{
    <form class="ui form" id="dealForm">
        <div class="field"></div>
        <div class="field">
            <button class="ui fluid green button" onclick="DealsMvc.confirm(this, '@Model.Id')">
                <i class="check icon"></i>
                Заказ выполнен в соответствии с требованиями
            </button>
        </div>
        <div class="field">
            <button class="ui fluid red button" type="button" onclick="DealsMvc.openDispute(this, '@Model.Id')">
                <i class="meh icon"></i>Открыть спор
            </button>
        </div>
        <div class="ui error message"></div>
    </form>
}
else if(Model.Status == DealStatuses.Confirmed || Model.Status == DealStatuses.ModerRejected)
{
    <h3 class="ui header"><i class="check icon"></i>Заказ выполнен</h3>
    if (!string.IsNullOrEmpty(Model.ImageSrc))
    {
        <img class="ui image" src="@Model.ImageSrc" />
    }
    <form class="ui form" id="dealForm">
        @Html.HiddenFor(x => x.Id)
        <div class="field">
            @Html.LabelFor(x => x.Feedback)
            @Html.TextAreaFor(x => x.Feedback)
        </div>
        <div class="field">
            <button type="button" class="ui primary button" onclick="DealsMvc.giveFeedback(this)">Отправить</button>
        </div>
        <div class="field">
            <label>Оценка выполнения заказа</label>
            <div class="ui star large rating" data-rating="@Model.Rating" data-max-rating="5"></div>
            (<span id="rating-res">@Model.Rating</span>)
        </div>
        <div class="ui error message"></div>
    </form>
}
else if(Model.Status == DealStatuses.Rejected || Model.Status == DealStatuses.ModerConfirmed)
{
    <h3 class="ui header">Сделка закрыта</h3>
}
<script>
    $(function () {
        @Html.Raw(Html.FormValidation<Mite.Models.DealClientModel>("#dealForm"))
        $('.rating').rating({
            onRate: function (val) {
                return DealsMvc.rate('@Model.Id', val);
            }
        });
    });
</script>