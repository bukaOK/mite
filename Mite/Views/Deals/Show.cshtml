@using Microsoft.AspNet.Identity
@using Mite.CodeData.Enums
@using Mite.Extensions
@using Mite.Helpers
@model Mite.Models.DealModel

@{
    ViewBag.Title = "Заказ " + Model.Id;
    var isAuthor = User.Identity.GetUserId() == Model.Author.Id;
}

@section styles{
    @Styles.Render("~/Content/datepicker", "~/Content/dialog", "~/Content/gallery")
}
<div class="ui segment">
    <div class="ui stackable grid">
        <div class="one column row">
            <div class="center aligned column">
                <h2 class="ui left aligned dividing header">
                    Заказ № @Model.Id
                    @if (Model.Deadline != null && Model.Deadline.Value < DateTime.UtcNow)
                    {
                        <span class="ui red label">Просрочено</span>
                    }
                </h2>
                <div class="ui tiny steps">
                    <a class="step" data-step="@DealStatuses.New">
                        <i class="plus icon"></i>
                        <div class="content">
                            <div class="title">@ViewHelper.GetEnumDisplayName(DealStatuses.New)</div>
                            <div class="description">Выбор срока, цены и требований</div>
                        </div>
                    </a>
                    <a class="step" data-step="@DealStatuses.ExpectPayment">
                        <i class="payment icon"></i>
                        <div class="content">
                            <div class="title">@ViewHelper.GetEnumDisplayName(DealStatuses.ExpectPayment)</div>
                            <div class="description">Оплата клиентом</div>
                        </div>
                    </a>
                    <a class="step" data-step="@DealStatuses.ExpectClient">
                        <i class="checkmark box icon"></i>
                        <div class="content">
                            <div class="title">@ViewHelper.GetEnumDisplayName(DealStatuses.ExpectClient)</div>
                            <div class="description">Подтверждение выполнения заказа</div>
                        </div>
                    </a>
                    <a class="step" data-step="@DealStatuses.Confirmed">
                        <i class="flag checkered icon"></i>
                        <div class="content">
                            <div class="title">@ViewHelper.GetEnumDisplayName(DealStatuses.Confirmed)</div>
                            <div class="description">Заказ выполнен</div>
                        </div>
                    </a>
                </div>
                @Html.ValidationSum()
            </div>
        </div>
        <div class="two column row">
            <div class="column">
                @{ Html.RenderPartial("_Chat", Model.Chat); }
            </div>
            <div class="column">
                <div class="ui styled accordion">
                    <div class="title">
                        <i class="dropdown icon"></i>
                        Подробности услуги
                    </div>
                    <div class="content">
                        <h2 class="ui dividing header">@Model.Service.Title</h2>
                        <img src="@Model.Service.ImageSrc" class="ui image" />
                        <h3 class="ui header">Описание</h3>
                        <p>@Model.Service.Description</p>
                    </div>
                </div>
                @if (isAuthor)
            {
                Html.RenderPartial("_ShowAuthor", AutoMapper.Mapper.Map<Mite.Models.DealAuthorModel>(Model));
            }
            else
            {
                Html.RenderPartial("_ShowClient", AutoMapper.Mapper.Map<Mite.Models.DealClientModel>(Model));
            }
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/datepicker", "~/bundles/grid", "~/bundles/gallery", "~/bundles/api")
}
<script>
    function toExpectPayDialog(btn) {
        swal({
            type: 'warning',
            title: 'Вы уверены?',
            text: 'После изменения статуса Вы уже не сможете изменить цену и дату сделки.',
            showCancelButton: true,
            confirmButtonText: 'Да',
            cancelButtonText: 'Нет',
            confirmButtonClass: 'ui large green button',
            cancelButtonClass: 'ui large red button',
            buttonsStyling: false
        }).then(function () {
            DealsMvc.toExpectPayment(btn);
        });
    }
    function closeDialog(btn) {
        swal({
            type: 'warning',
            title: 'Вы уверены?',
            text: 'При закрытии сделки все средства возвращаются клиенту.',
            showCancelButton: true,
            confirmButtonText: 'Да',
            cancelButtonText: 'Нет',
            confirmButtonClass: 'ui large green button',
            cancelButtonClass: 'ui large red button',
            buttonsStyling: false
        }).then(function () {
            DealsMvc.close(btn);
        });
    }

    $(function () {
        $('.accordion').accordion();
        $('.step[data-step="@Model.Status"]').addClass('active');
        FileReaderHelper.settings = {
            saveBtn: $('#save-btn'),
            imgWrapper: $('#img-wrapper'),
            field: $('#ImageSrc')
        };
        var imgInput = document.getElementById('img-download');
        if (imgInput !== null) {
            imgInput.onchange = FileReaderHelper.inputDownloadHandler;
        }
    });
</script>