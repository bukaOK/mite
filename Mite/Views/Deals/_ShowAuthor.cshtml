@using Mite.CodeData.Enums
@using Mite.Extensions
@using Microsoft.AspNet.Identity
@model Mite.Models.DealAuthorModel

@{ 
    var deadline = Model.Deadline ?? DateTime.UtcNow;
    var userType = User.Identity.GetUserId() == Model.Client.Id ? "client" : "author";
}
@if (Model.Status == DealStatuses.New)
{
    <h3 class="ui header">Параметры</h3>
    <form class="ui form" id="dealForm">
        @Html.HiddenFor(x => x.Id)
        <div class="two fields">
            <div class="field">
                <label>@Html.DisplayNameFor(x => x.Price)</label>
                @Html.TextBoxFor(x => x.Price, new { placeholder = Model.Price ?? Model.Service?.Price ?? Model.Order.Price })
            </div>
            <div class="field">
                <label>@Html.DisplayNameFor(x => x.DeadlineStr)</label>
                @Html.TextBoxFor(x => x.DeadlineStr, new { placeholder = deadline.ToString("dd.MM.yyyy") })
            </div>
        </div>
        <button class="ui red button" type="button" onclick="DealsMvc.close(this, '@Model.Id')">
            <i class="close icon"></i>
            Закрыть сделку
        </button>
        <button type="button" class="ui green button" onclick="DealsApi.update(this, '@userType')">Сохранить</button>
        <div class="ui error message"></div>
    </form>
}
else if (Model.Status == DealStatuses.ExpectPayment)
{
    <h3 class="ui header">Ожидаем оплату</h3>
    <form class="ui form" id="dealForm">
        @if (Model.VkReposted == false)
        {
            if (Model.VkAuthenticated)
            {
                <div class="field">@Html.Raw(Model.Service.VkRepostCode)</div>
                <button type="button" class="ui primary button" onclick="DealsMvc.confirmVkRepost(this, '@Model.Id')">Подтвердить репост</button>
            }
            else
            {
                using(Html.BeginForm("InitExternalAuth", "Account", new { returnUrl = Request.CurrentExecutionFilePath }, FormMethod.Post, new { @class = "ui form" }))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" class="ui vk button" name="provider" value="@VkSettings.DefaultAuthType" title="Чтобы проверить репост ВКонтакте, необходимо войти">
                        <i class="vk icon"></i>Войти ВКонтакте
                    </button>
                }
            }
        }
        else if (Model.VkReposted == true)
        {
        <div class="field">@Html.Raw(Model.Service.VkRepostCode)</div>
        <button type="button" disabled class="ui disabled primary button">Репост подтвержден</button>
        }
        <div class="ui error message"></div>
    </form>
}
else if(Model.Status == DealStatuses.ExpectClient)
{
    <h3 class="ui header">Ожидаем подтверждения клиента</h3>
    <form class="ui form" id="dealForm">
        <div class="field">
            <button class="ui fluid red button" title="После окончания спора ваша надёжность уменьшится" type="button" onclick="DealsMvc.openDispute(this, '@Model.Id')">
                <i class="meh icon"></i>Открыть спор
            </button>
        </div>
        <div class="ui error message"></div>
    </form>
}
else if (Model.Status == DealStatuses.Confirmed || Model.Status == DealStatuses.ModerConfirmed)
{
    <h3 class="ui header"><i class="check icon"></i>Заказ выполнен</h3>
    <form class="ui form" id="dealForm">
        @Html.HiddenFor(x => x.ImageSrc)
        @Html.HiddenFor(x => x.Id)
        <label class="ui labeled margined icon primary button">
            Загрузить результат
            <i class="cloud download icon"></i>
            <input type="file" id="service-img-inp" style="display: none" />
        </label>
        <button class="ui green button" title="Результат сделки будет доступен на странице услуги" type="button" onclick="DealsMvc.loadImage(this)">Сохранить</button>
        <div class="field">
            <div class="ui image img-wrapper">
                @if (!string.IsNullOrEmpty(Model.ImageSrc))
                {
                    <img src="@Model.ImageSrc" />
                }
            </div>
        </div>
        <div class="ui error message"></div>
    </form>
}
else if (Model.Status == DealStatuses.Rejected || Model.Status == DealStatuses.ModerRejected)
{
    <h3 class="ui header">Заказ отклонен</h3>
}
<script>
    $(function () {
        @Html.Raw(Html.FormValidation<Mite.Models.DealAuthorModel>("#dealForm"))
        $('#DeadlineStr').datepicker({
            minDate: new Date()
        });
        $('#service-img-inp').change(function (ev) {
            FileReaderHelper.inputDownloadHandler(ev, {
                saveBtn: $(this).parent(),
                imgWrapper: $('#dealForm .img-wrapper'),
                field: $('#ImageSrc')
            });
        });
    });
</script>